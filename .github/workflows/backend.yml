name: Todo Backend

on: [push, workflow_dispatch]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          working-directory: todo-backend

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
      - run: make dependencies
        working-directory: todo-backend
      - run: make test
        working-directory: todo-backend


  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS cli
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - uses: actions/setup-go@v2
      - name: Build
        working-directory: todo-backend
        run: make dist
      - name: Configure SSH
        working-directory: todo-backend
        run: |
          printf ${{ secrets.BASE64_SSH_PRIVATE_KEY }} | base64 -d > private_key && \
          chmod 0600 private_key
      - name: Deploy to EC2
        working-directory: todo-backend
        run: |
          for i in ${{ secrets.EC2_INSTANCE_IPS }}; do \
            echo "Starting deploy to $i..."; \
            echo "  Stopping service if running..."; \
            ssh -i ./private_key -o StrictHostKeyChecking=no ${{ secrets.EC2_INSTANCE_USER }}@$i 'sudo systemctl is-active --quiet todo && sudo systemctl stop todo || exit 0'; \
            echo "  Copying files to instance..."; \
            scp -i ./private_key dist/* ${{ secrets.EC2_INSTANCE_USER }}@$i:~; \
            echo "  Moving files into place on instance..."; \
            ssh -i ./private_key ${{ secrets.EC2_INSTANCE_USER }}@$i 'sudo mv ~/todo /usr/local/bin/todo'; \
            ssh -i ./private_key ${{ secrets.EC2_INSTANCE_USER }}@$i 'sudo mv ~/todo.service /etc/systemd/system/todo.service'; \
          done
      - name: Start service
        working-directory: todo-backend
        run: |
          for i in ${{ secrets.EC2_INSTANCE_IPS }}; do \
            echo "Starting service on $i..."; \
            ssh -i ./private_key ${{ secrets.EC2_INSTANCE_USER }}@$i 'sudo systemctl is-enabled --quiet todo || sudo systemctl enable todo'; \
            ssh -i ./private_key ${{ secrets.EC2_INSTANCE_USER }}@$i 'sudo systemctl start todo'; \
          done
